{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<h1 align=\"center\"> Principal Component Analysis </h1>\n",
    "<h3 align=\"center\"> IST 5520: Data Science and Machine Learning with Python </h3>\n",
    "<h3 align=\"center\"> By: Langtao Chen </h3>\n",
    "<h3 align=\"center\"> Update: 3/22/2019 </h3>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Import modules and set inline mode\n",
    "import pandas as pd\n",
    "import numpy as np\n",
    "from sklearn.decomposition import PCA\n",
    "import matplotlib.pyplot as plt\n",
    "from sklearn.preprocessing import scale\n",
    "%matplotlib inline"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 1. Data"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "In this section, we use the cereal dataset at http://lib.stat.cmu.edu/DASL/Datafiles/Cereals.html\n",
    "\n",
    "The dataset contain 77 cereals.\n",
    "\n",
    "Variable Names:\n",
    "\n",
    "- Name: Name of cereal\n",
    "- mfr: Manufacturer of cereal where A = American Home Food Products; G = General Mills; K = Kelloggs; N = Nabisco; P = Post; Q = Quaker Oats; R = Ralston Purina\n",
    "- type: cold or hot\n",
    "- calories: calories per serving\n",
    "- protein: grams of protein\n",
    "- fat: grams of fat\n",
    "- sodium: milligrams of sodium\n",
    "- fiber: grams of dietary fiber\n",
    "- carbo: grams of complex carbohydrates\n",
    "- sugars: grams of sugars\n",
    "- potass: milligrams of potassium\n",
    "- vitamins: vitamins and minerals - 0, 25, or 100, indicating the typical percentage of FDA recommended\n",
    "- shelf: display shelf (1, 2, or 3, counting from the floor)\n",
    "- weight: weight in ounces of one serving\n",
    "- cups: number of cups in one serving\n",
    "- rating: a rating of the cereals"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>name</th>\n",
       "      <th>mfr</th>\n",
       "      <th>type</th>\n",
       "      <th>calories</th>\n",
       "      <th>protein</th>\n",
       "      <th>fat</th>\n",
       "      <th>sodium</th>\n",
       "      <th>fiber</th>\n",
       "      <th>carbo</th>\n",
       "      <th>sugars</th>\n",
       "      <th>potass</th>\n",
       "      <th>vitamins</th>\n",
       "      <th>shelf</th>\n",
       "      <th>weight</th>\n",
       "      <th>cups</th>\n",
       "      <th>rating</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>Froot_Loops</td>\n",
       "      <td>K</td>\n",
       "      <td>C</td>\n",
       "      <td>110</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>125</td>\n",
       "      <td>1.0</td>\n",
       "      <td>11.0</td>\n",
       "      <td>13</td>\n",
       "      <td>30</td>\n",
       "      <td>25</td>\n",
       "      <td>2</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.00</td>\n",
       "      <td>32.207582</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>44</th>\n",
       "      <td>Muesli_Raisins,_Dates,_&amp;_Almonds</td>\n",
       "      <td>R</td>\n",
       "      <td>C</td>\n",
       "      <td>150</td>\n",
       "      <td>4</td>\n",
       "      <td>3</td>\n",
       "      <td>95</td>\n",
       "      <td>3.0</td>\n",
       "      <td>16.0</td>\n",
       "      <td>11</td>\n",
       "      <td>170</td>\n",
       "      <td>25</td>\n",
       "      <td>3</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.00</td>\n",
       "      <td>37.136863</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>42</th>\n",
       "      <td>Lucky_Charms</td>\n",
       "      <td>G</td>\n",
       "      <td>C</td>\n",
       "      <td>110</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>180</td>\n",
       "      <td>0.0</td>\n",
       "      <td>12.0</td>\n",
       "      <td>12</td>\n",
       "      <td>55</td>\n",
       "      <td>25</td>\n",
       "      <td>2</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.00</td>\n",
       "      <td>26.734515</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>Cheerios</td>\n",
       "      <td>G</td>\n",
       "      <td>C</td>\n",
       "      <td>110</td>\n",
       "      <td>6</td>\n",
       "      <td>2</td>\n",
       "      <td>290</td>\n",
       "      <td>2.0</td>\n",
       "      <td>17.0</td>\n",
       "      <td>1</td>\n",
       "      <td>105</td>\n",
       "      <td>25</td>\n",
       "      <td>1</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.25</td>\n",
       "      <td>50.764999</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>Cinnamon_Toast_Crunch</td>\n",
       "      <td>G</td>\n",
       "      <td>C</td>\n",
       "      <td>120</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>210</td>\n",
       "      <td>0.0</td>\n",
       "      <td>13.0</td>\n",
       "      <td>9</td>\n",
       "      <td>45</td>\n",
       "      <td>25</td>\n",
       "      <td>2</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.75</td>\n",
       "      <td>19.823573</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Almond_Delight</td>\n",
       "      <td>R</td>\n",
       "      <td>C</td>\n",
       "      <td>110</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>200</td>\n",
       "      <td>1.0</td>\n",
       "      <td>14.0</td>\n",
       "      <td>8</td>\n",
       "      <td>-1</td>\n",
       "      <td>25</td>\n",
       "      <td>3</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.75</td>\n",
       "      <td>34.384843</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>100%_Bran</td>\n",
       "      <td>N</td>\n",
       "      <td>C</td>\n",
       "      <td>70</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>130</td>\n",
       "      <td>10.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>6</td>\n",
       "      <td>280</td>\n",
       "      <td>25</td>\n",
       "      <td>3</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.33</td>\n",
       "      <td>68.402973</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>Cocoa_Puffs</td>\n",
       "      <td>G</td>\n",
       "      <td>C</td>\n",
       "      <td>110</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>180</td>\n",
       "      <td>0.0</td>\n",
       "      <td>12.0</td>\n",
       "      <td>13</td>\n",
       "      <td>55</td>\n",
       "      <td>25</td>\n",
       "      <td>2</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.00</td>\n",
       "      <td>22.736446</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>76</th>\n",
       "      <td>Wheaties_Honey_Gold</td>\n",
       "      <td>G</td>\n",
       "      <td>C</td>\n",
       "      <td>110</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>200</td>\n",
       "      <td>1.0</td>\n",
       "      <td>16.0</td>\n",
       "      <td>8</td>\n",
       "      <td>60</td>\n",
       "      <td>25</td>\n",
       "      <td>1</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.75</td>\n",
       "      <td>36.187559</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>43</th>\n",
       "      <td>Maypo</td>\n",
       "      <td>A</td>\n",
       "      <td>H</td>\n",
       "      <td>100</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>16.0</td>\n",
       "      <td>3</td>\n",
       "      <td>95</td>\n",
       "      <td>25</td>\n",
       "      <td>2</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.00</td>\n",
       "      <td>54.850917</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                name mfr type  calories  protein  fat  sodium  \\\n",
       "24                       Froot_Loops   K    C       110        2    1     125   \n",
       "44  Muesli_Raisins,_Dates,_&_Almonds   R    C       150        4    3      95   \n",
       "42                      Lucky_Charms   G    C       110        2    1     180   \n",
       "11                          Cheerios   G    C       110        6    2     290   \n",
       "12             Cinnamon_Toast_Crunch   G    C       120        1    3     210   \n",
       "4                     Almond_Delight   R    C       110        2    2     200   \n",
       "0                          100%_Bran   N    C        70        4    1     130   \n",
       "14                       Cocoa_Puffs   G    C       110        1    1     180   \n",
       "76               Wheaties_Honey_Gold   G    C       110        2    1     200   \n",
       "43                             Maypo   A    H       100        4    1       0   \n",
       "\n",
       "    fiber  carbo  sugars  potass  vitamins  shelf  weight  cups     rating  \n",
       "24    1.0   11.0      13      30        25      2     1.0  1.00  32.207582  \n",
       "44    3.0   16.0      11     170        25      3     1.0  1.00  37.136863  \n",
       "42    0.0   12.0      12      55        25      2     1.0  1.00  26.734515  \n",
       "11    2.0   17.0       1     105        25      1     1.0  1.25  50.764999  \n",
       "12    0.0   13.0       9      45        25      2     1.0  0.75  19.823573  \n",
       "4     1.0   14.0       8      -1        25      3     1.0  0.75  34.384843  \n",
       "0    10.0    5.0       6     280        25      3     1.0  0.33  68.402973  \n",
       "14    0.0   12.0      13      55        25      2     1.0  1.00  22.736446  \n",
       "76    1.0   16.0       8      60        25      1     1.0  0.75  36.187559  \n",
       "43    0.0   16.0       3      95        25      2     1.0  1.00  54.850917  "
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df = pd.read_csv('../Data/Cereals.txt',sep='\\t')\n",
    "df.sample(10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>calories</th>\n",
       "      <th>protein</th>\n",
       "      <th>fat</th>\n",
       "      <th>sodium</th>\n",
       "      <th>fiber</th>\n",
       "      <th>carbo</th>\n",
       "      <th>sugars</th>\n",
       "      <th>potass</th>\n",
       "      <th>vitamins</th>\n",
       "      <th>shelf</th>\n",
       "      <th>weight</th>\n",
       "      <th>cups</th>\n",
       "      <th>rating</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>calories</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.019066</td>\n",
       "      <td>0.498610</td>\n",
       "      <td>0.300649</td>\n",
       "      <td>-0.293413</td>\n",
       "      <td>0.250681</td>\n",
       "      <td>0.562340</td>\n",
       "      <td>-0.066609</td>\n",
       "      <td>0.265356</td>\n",
       "      <td>0.097234</td>\n",
       "      <td>0.696091</td>\n",
       "      <td>0.087200</td>\n",
       "      <td>-0.689376</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>protein</th>\n",
       "      <td>0.019066</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.208431</td>\n",
       "      <td>-0.054674</td>\n",
       "      <td>0.500330</td>\n",
       "      <td>-0.130864</td>\n",
       "      <td>-0.329142</td>\n",
       "      <td>0.549407</td>\n",
       "      <td>0.007335</td>\n",
       "      <td>0.133865</td>\n",
       "      <td>0.216158</td>\n",
       "      <td>-0.244469</td>\n",
       "      <td>0.470618</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>fat</th>\n",
       "      <td>0.498610</td>\n",
       "      <td>0.208431</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.005407</td>\n",
       "      <td>0.016719</td>\n",
       "      <td>-0.318043</td>\n",
       "      <td>0.270819</td>\n",
       "      <td>0.193279</td>\n",
       "      <td>-0.031156</td>\n",
       "      <td>0.263691</td>\n",
       "      <td>0.214625</td>\n",
       "      <td>-0.175892</td>\n",
       "      <td>-0.409284</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>sodium</th>\n",
       "      <td>0.300649</td>\n",
       "      <td>-0.054674</td>\n",
       "      <td>-0.005407</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.070675</td>\n",
       "      <td>0.355983</td>\n",
       "      <td>0.101451</td>\n",
       "      <td>-0.032603</td>\n",
       "      <td>0.361477</td>\n",
       "      <td>-0.069719</td>\n",
       "      <td>0.308576</td>\n",
       "      <td>0.119665</td>\n",
       "      <td>-0.401295</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>fiber</th>\n",
       "      <td>-0.293413</td>\n",
       "      <td>0.500330</td>\n",
       "      <td>0.016719</td>\n",
       "      <td>-0.070675</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.356083</td>\n",
       "      <td>-0.141205</td>\n",
       "      <td>0.903374</td>\n",
       "      <td>-0.032243</td>\n",
       "      <td>0.297539</td>\n",
       "      <td>0.247226</td>\n",
       "      <td>-0.513061</td>\n",
       "      <td>0.584160</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>carbo</th>\n",
       "      <td>0.250681</td>\n",
       "      <td>-0.130864</td>\n",
       "      <td>-0.318043</td>\n",
       "      <td>0.355983</td>\n",
       "      <td>-0.356083</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.331665</td>\n",
       "      <td>-0.349685</td>\n",
       "      <td>0.258148</td>\n",
       "      <td>-0.101790</td>\n",
       "      <td>0.135136</td>\n",
       "      <td>0.363932</td>\n",
       "      <td>0.052055</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>sugars</th>\n",
       "      <td>0.562340</td>\n",
       "      <td>-0.329142</td>\n",
       "      <td>0.270819</td>\n",
       "      <td>0.101451</td>\n",
       "      <td>-0.141205</td>\n",
       "      <td>-0.331665</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.021696</td>\n",
       "      <td>0.125137</td>\n",
       "      <td>0.100438</td>\n",
       "      <td>0.450648</td>\n",
       "      <td>-0.032358</td>\n",
       "      <td>-0.759675</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>potass</th>\n",
       "      <td>-0.066609</td>\n",
       "      <td>0.549407</td>\n",
       "      <td>0.193279</td>\n",
       "      <td>-0.032603</td>\n",
       "      <td>0.903374</td>\n",
       "      <td>-0.349685</td>\n",
       "      <td>0.021696</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.020699</td>\n",
       "      <td>0.360663</td>\n",
       "      <td>0.416303</td>\n",
       "      <td>-0.495195</td>\n",
       "      <td>0.380165</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>vitamins</th>\n",
       "      <td>0.265356</td>\n",
       "      <td>0.007335</td>\n",
       "      <td>-0.031156</td>\n",
       "      <td>0.361477</td>\n",
       "      <td>-0.032243</td>\n",
       "      <td>0.258148</td>\n",
       "      <td>0.125137</td>\n",
       "      <td>0.020699</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.299262</td>\n",
       "      <td>0.320324</td>\n",
       "      <td>0.128405</td>\n",
       "      <td>-0.240544</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>shelf</th>\n",
       "      <td>0.097234</td>\n",
       "      <td>0.133865</td>\n",
       "      <td>0.263691</td>\n",
       "      <td>-0.069719</td>\n",
       "      <td>0.297539</td>\n",
       "      <td>-0.101790</td>\n",
       "      <td>0.100438</td>\n",
       "      <td>0.360663</td>\n",
       "      <td>0.299262</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.190762</td>\n",
       "      <td>-0.335269</td>\n",
       "      <td>0.025159</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>weight</th>\n",
       "      <td>0.696091</td>\n",
       "      <td>0.216158</td>\n",
       "      <td>0.214625</td>\n",
       "      <td>0.308576</td>\n",
       "      <td>0.247226</td>\n",
       "      <td>0.135136</td>\n",
       "      <td>0.450648</td>\n",
       "      <td>0.416303</td>\n",
       "      <td>0.320324</td>\n",
       "      <td>0.190762</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.199583</td>\n",
       "      <td>-0.298124</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>cups</th>\n",
       "      <td>0.087200</td>\n",
       "      <td>-0.244469</td>\n",
       "      <td>-0.175892</td>\n",
       "      <td>0.119665</td>\n",
       "      <td>-0.513061</td>\n",
       "      <td>0.363932</td>\n",
       "      <td>-0.032358</td>\n",
       "      <td>-0.495195</td>\n",
       "      <td>0.128405</td>\n",
       "      <td>-0.335269</td>\n",
       "      <td>-0.199583</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.203160</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>rating</th>\n",
       "      <td>-0.689376</td>\n",
       "      <td>0.470618</td>\n",
       "      <td>-0.409284</td>\n",
       "      <td>-0.401295</td>\n",
       "      <td>0.584160</td>\n",
       "      <td>0.052055</td>\n",
       "      <td>-0.759675</td>\n",
       "      <td>0.380165</td>\n",
       "      <td>-0.240544</td>\n",
       "      <td>0.025159</td>\n",
       "      <td>-0.298124</td>\n",
       "      <td>-0.203160</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          calories   protein       fat    sodium     fiber     carbo  \\\n",
       "calories  1.000000  0.019066  0.498610  0.300649 -0.293413  0.250681   \n",
       "protein   0.019066  1.000000  0.208431 -0.054674  0.500330 -0.130864   \n",
       "fat       0.498610  0.208431  1.000000 -0.005407  0.016719 -0.318043   \n",
       "sodium    0.300649 -0.054674 -0.005407  1.000000 -0.070675  0.355983   \n",
       "fiber    -0.293413  0.500330  0.016719 -0.070675  1.000000 -0.356083   \n",
       "carbo     0.250681 -0.130864 -0.318043  0.355983 -0.356083  1.000000   \n",
       "sugars    0.562340 -0.329142  0.270819  0.101451 -0.141205 -0.331665   \n",
       "potass   -0.066609  0.549407  0.193279 -0.032603  0.903374 -0.349685   \n",
       "vitamins  0.265356  0.007335 -0.031156  0.361477 -0.032243  0.258148   \n",
       "shelf     0.097234  0.133865  0.263691 -0.069719  0.297539 -0.101790   \n",
       "weight    0.696091  0.216158  0.214625  0.308576  0.247226  0.135136   \n",
       "cups      0.087200 -0.244469 -0.175892  0.119665 -0.513061  0.363932   \n",
       "rating   -0.689376  0.470618 -0.409284 -0.401295  0.584160  0.052055   \n",
       "\n",
       "            sugars    potass  vitamins     shelf    weight      cups    rating  \n",
       "calories  0.562340 -0.066609  0.265356  0.097234  0.696091  0.087200 -0.689376  \n",
       "protein  -0.329142  0.549407  0.007335  0.133865  0.216158 -0.244469  0.470618  \n",
       "fat       0.270819  0.193279 -0.031156  0.263691  0.214625 -0.175892 -0.409284  \n",
       "sodium    0.101451 -0.032603  0.361477 -0.069719  0.308576  0.119665 -0.401295  \n",
       "fiber    -0.141205  0.903374 -0.032243  0.297539  0.247226 -0.513061  0.584160  \n",
       "carbo    -0.331665 -0.349685  0.258148 -0.101790  0.135136  0.363932  0.052055  \n",
       "sugars    1.000000  0.021696  0.125137  0.100438  0.450648 -0.032358 -0.759675  \n",
       "potass    0.021696  1.000000  0.020699  0.360663  0.416303 -0.495195  0.380165  \n",
       "vitamins  0.125137  0.020699  1.000000  0.299262  0.320324  0.128405 -0.240544  \n",
       "shelf     0.100438  0.360663  0.299262  1.000000  0.190762 -0.335269  0.025159  \n",
       "weight    0.450648  0.416303  0.320324  0.190762  1.000000 -0.199583 -0.298124  \n",
       "cups     -0.032358 -0.495195  0.128405 -0.335269 -0.199583  1.000000 -0.203160  \n",
       "rating   -0.759675  0.380165 -0.240544  0.025159 -0.298124 -0.203160  1.000000  "
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.corr()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "From the above correlation table, we can find that variables are correlated. For example, corr(calories, fat) = 0.4986."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 2. Normalize Data\n",
    "\n",
    "Only choose the numeric columns in the dataset to do the principal component analysis."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "c:\\users\\chenla\\appdata\\local\\programs\\python\\python36\\lib\\site-packages\\ipykernel_launcher.py:1: DataConversionWarning: Data with input dtype int64, float64 were all converted to float64 by the scale function.\n",
      "  \"\"\"Entry point for launching an IPython kernel.\n"
     ]
    }
   ],
   "source": [
    "data_norm = scale(df.loc[:,'calories':'rating'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "numpy.ndarray"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "type(data_norm)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>count</th>\n",
       "      <th>mean</th>\n",
       "      <th>std</th>\n",
       "      <th>min</th>\n",
       "      <th>25%</th>\n",
       "      <th>50%</th>\n",
       "      <th>75%</th>\n",
       "      <th>max</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>77.0</td>\n",
       "      <td>-8.398765e-17</td>\n",
       "      <td>1.006557</td>\n",
       "      <td>-2.938605</td>\n",
       "      <td>-0.355585</td>\n",
       "      <td>0.161019</td>\n",
       "      <td>0.161019</td>\n",
       "      <td>2.744040</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>77.0</td>\n",
       "      <td>2.018587e-17</td>\n",
       "      <td>1.006557</td>\n",
       "      <td>-1.420902</td>\n",
       "      <td>-0.501495</td>\n",
       "      <td>0.417912</td>\n",
       "      <td>0.417912</td>\n",
       "      <td>3.176134</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>77.0</td>\n",
       "      <td>8.583502e-17</td>\n",
       "      <td>1.006557</td>\n",
       "      <td>-1.013072</td>\n",
       "      <td>-1.013072</td>\n",
       "      <td>-0.012988</td>\n",
       "      <td>0.987096</td>\n",
       "      <td>3.987349</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>77.0</td>\n",
       "      <td>5.767392e-18</td>\n",
       "      <td>1.006557</td>\n",
       "      <td>-1.917189</td>\n",
       "      <td>-0.356306</td>\n",
       "      <td>0.244034</td>\n",
       "      <td>0.604238</td>\n",
       "      <td>1.924986</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>77.0</td>\n",
       "      <td>9.155735e-17</td>\n",
       "      <td>1.006557</td>\n",
       "      <td>-0.908824</td>\n",
       "      <td>-0.486498</td>\n",
       "      <td>-0.064172</td>\n",
       "      <td>0.358155</td>\n",
       "      <td>5.003745</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>77.0</td>\n",
       "      <td>2.883696e-18</td>\n",
       "      <td>1.006557</td>\n",
       "      <td>-3.669045</td>\n",
       "      <td>-0.610998</td>\n",
       "      <td>-0.140530</td>\n",
       "      <td>0.565173</td>\n",
       "      <td>1.976579</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>77.0</td>\n",
       "      <td>-1.658125e-17</td>\n",
       "      <td>1.006557</td>\n",
       "      <td>-1.793978</td>\n",
       "      <td>-0.888166</td>\n",
       "      <td>0.017646</td>\n",
       "      <td>0.923458</td>\n",
       "      <td>1.829269</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>77.0</td>\n",
       "      <td>-7.353425e-17</td>\n",
       "      <td>1.006557</td>\n",
       "      <td>-1.370723</td>\n",
       "      <td>-0.791811</td>\n",
       "      <td>-0.085819</td>\n",
       "      <td>0.337776</td>\n",
       "      <td>3.302939</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>77.0</td>\n",
       "      <td>2.883696e-17</td>\n",
       "      <td>1.006557</td>\n",
       "      <td>-1.272550</td>\n",
       "      <td>-0.146270</td>\n",
       "      <td>-0.146270</td>\n",
       "      <td>-0.146270</td>\n",
       "      <td>3.232570</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>77.0</td>\n",
       "      <td>-1.095805e-16</td>\n",
       "      <td>1.006557</td>\n",
       "      <td>-1.460273</td>\n",
       "      <td>-1.460273</td>\n",
       "      <td>-0.251230</td>\n",
       "      <td>0.957813</td>\n",
       "      <td>0.957813</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>77.0</td>\n",
       "      <td>-1.881612e-16</td>\n",
       "      <td>1.006557</td>\n",
       "      <td>-3.542628</td>\n",
       "      <td>-0.198067</td>\n",
       "      <td>-0.198067</td>\n",
       "      <td>-0.198067</td>\n",
       "      <td>3.146493</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>77.0</td>\n",
       "      <td>1.492313e-16</td>\n",
       "      <td>1.006557</td>\n",
       "      <td>-2.469891</td>\n",
       "      <td>-0.653283</td>\n",
       "      <td>-0.307262</td>\n",
       "      <td>0.774053</td>\n",
       "      <td>2.936682</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>77.0</td>\n",
       "      <td>2.451142e-17</td>\n",
       "      <td>1.006557</td>\n",
       "      <td>-1.764349</td>\n",
       "      <td>-0.680121</td>\n",
       "      <td>-0.162334</td>\n",
       "      <td>0.584897</td>\n",
       "      <td>3.657211</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    count          mean       std       min       25%       50%       75%  \\\n",
       "0    77.0 -8.398765e-17  1.006557 -2.938605 -0.355585  0.161019  0.161019   \n",
       "1    77.0  2.018587e-17  1.006557 -1.420902 -0.501495  0.417912  0.417912   \n",
       "2    77.0  8.583502e-17  1.006557 -1.013072 -1.013072 -0.012988  0.987096   \n",
       "3    77.0  5.767392e-18  1.006557 -1.917189 -0.356306  0.244034  0.604238   \n",
       "4    77.0  9.155735e-17  1.006557 -0.908824 -0.486498 -0.064172  0.358155   \n",
       "5    77.0  2.883696e-18  1.006557 -3.669045 -0.610998 -0.140530  0.565173   \n",
       "6    77.0 -1.658125e-17  1.006557 -1.793978 -0.888166  0.017646  0.923458   \n",
       "7    77.0 -7.353425e-17  1.006557 -1.370723 -0.791811 -0.085819  0.337776   \n",
       "8    77.0  2.883696e-17  1.006557 -1.272550 -0.146270 -0.146270 -0.146270   \n",
       "9    77.0 -1.095805e-16  1.006557 -1.460273 -1.460273 -0.251230  0.957813   \n",
       "10   77.0 -1.881612e-16  1.006557 -3.542628 -0.198067 -0.198067 -0.198067   \n",
       "11   77.0  1.492313e-16  1.006557 -2.469891 -0.653283 -0.307262  0.774053   \n",
       "12   77.0  2.451142e-17  1.006557 -1.764349 -0.680121 -0.162334  0.584897   \n",
       "\n",
       "         max  \n",
       "0   2.744040  \n",
       "1   3.176134  \n",
       "2   3.987349  \n",
       "3   1.924986  \n",
       "4   5.003745  \n",
       "5   1.976579  \n",
       "6   1.829269  \n",
       "7   3.302939  \n",
       "8   3.232570  \n",
       "9   0.957813  \n",
       "10  3.146493  \n",
       "11  2.936682  \n",
       "12  3.657211  "
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pd.DataFrame(data_norm).describe().transpose()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "From the above descriptive statistics, we can see that the standardization process converts all variables into ones that have 0 as mean and 1 as standard error."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>0</th>\n",
       "      <th>1</th>\n",
       "      <th>2</th>\n",
       "      <th>3</th>\n",
       "      <th>4</th>\n",
       "      <th>5</th>\n",
       "      <th>6</th>\n",
       "      <th>7</th>\n",
       "      <th>8</th>\n",
       "      <th>9</th>\n",
       "      <th>10</th>\n",
       "      <th>11</th>\n",
       "      <th>12</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.019066</td>\n",
       "      <td>0.498610</td>\n",
       "      <td>0.300649</td>\n",
       "      <td>-0.293413</td>\n",
       "      <td>0.250681</td>\n",
       "      <td>0.562340</td>\n",
       "      <td>-0.066609</td>\n",
       "      <td>0.265356</td>\n",
       "      <td>0.097234</td>\n",
       "      <td>0.696091</td>\n",
       "      <td>0.087200</td>\n",
       "      <td>-0.689376</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.019066</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.208431</td>\n",
       "      <td>-0.054674</td>\n",
       "      <td>0.500330</td>\n",
       "      <td>-0.130864</td>\n",
       "      <td>-0.329142</td>\n",
       "      <td>0.549407</td>\n",
       "      <td>0.007335</td>\n",
       "      <td>0.133865</td>\n",
       "      <td>0.216158</td>\n",
       "      <td>-0.244469</td>\n",
       "      <td>0.470618</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.498610</td>\n",
       "      <td>0.208431</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.005407</td>\n",
       "      <td>0.016719</td>\n",
       "      <td>-0.318043</td>\n",
       "      <td>0.270819</td>\n",
       "      <td>0.193279</td>\n",
       "      <td>-0.031156</td>\n",
       "      <td>0.263691</td>\n",
       "      <td>0.214625</td>\n",
       "      <td>-0.175892</td>\n",
       "      <td>-0.409284</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0.300649</td>\n",
       "      <td>-0.054674</td>\n",
       "      <td>-0.005407</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.070675</td>\n",
       "      <td>0.355983</td>\n",
       "      <td>0.101451</td>\n",
       "      <td>-0.032603</td>\n",
       "      <td>0.361477</td>\n",
       "      <td>-0.069719</td>\n",
       "      <td>0.308576</td>\n",
       "      <td>0.119665</td>\n",
       "      <td>-0.401295</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>-0.293413</td>\n",
       "      <td>0.500330</td>\n",
       "      <td>0.016719</td>\n",
       "      <td>-0.070675</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.356083</td>\n",
       "      <td>-0.141205</td>\n",
       "      <td>0.903374</td>\n",
       "      <td>-0.032243</td>\n",
       "      <td>0.297539</td>\n",
       "      <td>0.247226</td>\n",
       "      <td>-0.513061</td>\n",
       "      <td>0.584160</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>0.250681</td>\n",
       "      <td>-0.130864</td>\n",
       "      <td>-0.318043</td>\n",
       "      <td>0.355983</td>\n",
       "      <td>-0.356083</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.331665</td>\n",
       "      <td>-0.349685</td>\n",
       "      <td>0.258148</td>\n",
       "      <td>-0.101790</td>\n",
       "      <td>0.135136</td>\n",
       "      <td>0.363932</td>\n",
       "      <td>0.052055</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>0.562340</td>\n",
       "      <td>-0.329142</td>\n",
       "      <td>0.270819</td>\n",
       "      <td>0.101451</td>\n",
       "      <td>-0.141205</td>\n",
       "      <td>-0.331665</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.021696</td>\n",
       "      <td>0.125137</td>\n",
       "      <td>0.100438</td>\n",
       "      <td>0.450648</td>\n",
       "      <td>-0.032358</td>\n",
       "      <td>-0.759675</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>-0.066609</td>\n",
       "      <td>0.549407</td>\n",
       "      <td>0.193279</td>\n",
       "      <td>-0.032603</td>\n",
       "      <td>0.903374</td>\n",
       "      <td>-0.349685</td>\n",
       "      <td>0.021696</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.020699</td>\n",
       "      <td>0.360663</td>\n",
       "      <td>0.416303</td>\n",
       "      <td>-0.495195</td>\n",
       "      <td>0.380165</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>0.265356</td>\n",
       "      <td>0.007335</td>\n",
       "      <td>-0.031156</td>\n",
       "      <td>0.361477</td>\n",
       "      <td>-0.032243</td>\n",
       "      <td>0.258148</td>\n",
       "      <td>0.125137</td>\n",
       "      <td>0.020699</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.299262</td>\n",
       "      <td>0.320324</td>\n",
       "      <td>0.128405</td>\n",
       "      <td>-0.240544</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>0.097234</td>\n",
       "      <td>0.133865</td>\n",
       "      <td>0.263691</td>\n",
       "      <td>-0.069719</td>\n",
       "      <td>0.297539</td>\n",
       "      <td>-0.101790</td>\n",
       "      <td>0.100438</td>\n",
       "      <td>0.360663</td>\n",
       "      <td>0.299262</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.190762</td>\n",
       "      <td>-0.335269</td>\n",
       "      <td>0.025159</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>0.696091</td>\n",
       "      <td>0.216158</td>\n",
       "      <td>0.214625</td>\n",
       "      <td>0.308576</td>\n",
       "      <td>0.247226</td>\n",
       "      <td>0.135136</td>\n",
       "      <td>0.450648</td>\n",
       "      <td>0.416303</td>\n",
       "      <td>0.320324</td>\n",
       "      <td>0.190762</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.199583</td>\n",
       "      <td>-0.298124</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>0.087200</td>\n",
       "      <td>-0.244469</td>\n",
       "      <td>-0.175892</td>\n",
       "      <td>0.119665</td>\n",
       "      <td>-0.513061</td>\n",
       "      <td>0.363932</td>\n",
       "      <td>-0.032358</td>\n",
       "      <td>-0.495195</td>\n",
       "      <td>0.128405</td>\n",
       "      <td>-0.335269</td>\n",
       "      <td>-0.199583</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.203160</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>-0.689376</td>\n",
       "      <td>0.470618</td>\n",
       "      <td>-0.409284</td>\n",
       "      <td>-0.401295</td>\n",
       "      <td>0.584160</td>\n",
       "      <td>0.052055</td>\n",
       "      <td>-0.759675</td>\n",
       "      <td>0.380165</td>\n",
       "      <td>-0.240544</td>\n",
       "      <td>0.025159</td>\n",
       "      <td>-0.298124</td>\n",
       "      <td>-0.203160</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          0         1         2         3         4         5         6   \\\n",
       "0   1.000000  0.019066  0.498610  0.300649 -0.293413  0.250681  0.562340   \n",
       "1   0.019066  1.000000  0.208431 -0.054674  0.500330 -0.130864 -0.329142   \n",
       "2   0.498610  0.208431  1.000000 -0.005407  0.016719 -0.318043  0.270819   \n",
       "3   0.300649 -0.054674 -0.005407  1.000000 -0.070675  0.355983  0.101451   \n",
       "4  -0.293413  0.500330  0.016719 -0.070675  1.000000 -0.356083 -0.141205   \n",
       "5   0.250681 -0.130864 -0.318043  0.355983 -0.356083  1.000000 -0.331665   \n",
       "6   0.562340 -0.329142  0.270819  0.101451 -0.141205 -0.331665  1.000000   \n",
       "7  -0.066609  0.549407  0.193279 -0.032603  0.903374 -0.349685  0.021696   \n",
       "8   0.265356  0.007335 -0.031156  0.361477 -0.032243  0.258148  0.125137   \n",
       "9   0.097234  0.133865  0.263691 -0.069719  0.297539 -0.101790  0.100438   \n",
       "10  0.696091  0.216158  0.214625  0.308576  0.247226  0.135136  0.450648   \n",
       "11  0.087200 -0.244469 -0.175892  0.119665 -0.513061  0.363932 -0.032358   \n",
       "12 -0.689376  0.470618 -0.409284 -0.401295  0.584160  0.052055 -0.759675   \n",
       "\n",
       "          7         8         9         10        11        12  \n",
       "0  -0.066609  0.265356  0.097234  0.696091  0.087200 -0.689376  \n",
       "1   0.549407  0.007335  0.133865  0.216158 -0.244469  0.470618  \n",
       "2   0.193279 -0.031156  0.263691  0.214625 -0.175892 -0.409284  \n",
       "3  -0.032603  0.361477 -0.069719  0.308576  0.119665 -0.401295  \n",
       "4   0.903374 -0.032243  0.297539  0.247226 -0.513061  0.584160  \n",
       "5  -0.349685  0.258148 -0.101790  0.135136  0.363932  0.052055  \n",
       "6   0.021696  0.125137  0.100438  0.450648 -0.032358 -0.759675  \n",
       "7   1.000000  0.020699  0.360663  0.416303 -0.495195  0.380165  \n",
       "8   0.020699  1.000000  0.299262  0.320324  0.128405 -0.240544  \n",
       "9   0.360663  0.299262  1.000000  0.190762 -0.335269  0.025159  \n",
       "10  0.416303  0.320324  0.190762  1.000000 -0.199583 -0.298124  \n",
       "11 -0.495195  0.128405 -0.335269 -0.199583  1.000000 -0.203160  \n",
       "12  0.380165 -0.240544  0.025159 -0.298124 -0.203160  1.000000  "
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pd.DataFrame(data_norm).corr()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Normalization does not change the correlation between variables. For example, from the above correlation table, we can find the correlation between calories and fat is still 0.4986."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 3. Principal Component Analysis\n",
    "\n",
    "### 3.1 Full Component Solution"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "First, let's run the component analysis with 13 components (the normalized dataset contains 13 variables)."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "PCA(copy=True, iterated_power='auto', n_components=13, random_state=None,\n",
       "  svd_solver='auto', tol=0.0, whiten=False)"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Select the number of components\n",
    "pca1 = PCA(n_components=13)\n",
    "\n",
    "# Fit the PCA model\n",
    "pca1.fit(data_norm)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[2.77680611e-01 2.41421569e-01 1.39748897e-01 8.17149838e-02\n",
      " 7.46926381e-02 5.53198062e-02 5.16347267e-02 3.46038126e-02\n",
      " 2.33339532e-02 1.00530005e-02 5.62222549e-03 4.17377643e-03\n",
      " 1.66954050e-17]\n"
     ]
    }
   ],
   "source": [
    "#The amount of variance that each PC explains\n",
    "var = pca1.explained_variance_ratio_\n",
    "\n",
    "print(var)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[27.77 51.91 65.88 74.05 81.52 87.05 92.21 95.67 98.   99.01 99.57 99.99\n",
      " 99.99]\n"
     ]
    }
   ],
   "source": [
    "#Cumulative Variance explains\n",
    "var1 = np.cumsum(np.round(pca1.explained_variance_ratio_, decimals=4)*100)\n",
    "\n",
    "print(var1)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Draw a scree plot to show the cumulative variance explained along the number of principal components."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "var1 = pd.DataFrame(var1, index=np.arange(1,14))\n",
    "plt.plot(var1,color='blue')\n",
    "plt.title('Scree Plot')\n",
    "plt.xlabel('Number of Principal Components')\n",
    "plt.ylabel('Cumulative Variance Explained')\n",
    "plt.savefig('scree_plot.png',dpi=100,bbox_inches='tight')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "From the above plot, we can see that if we choose a 7-component solution, the explained variance would be > 90%. That is to say, 7 orthogonal (uncorrelated) components will be able to keep more than 90% variance of the 13 variables in the original dataset. This would be a good solution. Now, let's do the PCA with 7 components.\n",
    "\n",
    "The choice of the number of principal components is determined by the analyst. In order to further reduce the number of components, you can choose for example a 2-component solution, which can keep 52% of variance in the original dataset."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 3.2 A 7-Component Solution"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>PC1</th>\n",
       "      <th>PC2</th>\n",
       "      <th>PC3</th>\n",
       "      <th>PC4</th>\n",
       "      <th>PC5</th>\n",
       "      <th>PC6</th>\n",
       "      <th>PC7</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>5.529765</td>\n",
       "      <td>-1.805980</td>\n",
       "      <td>-0.613703</td>\n",
       "      <td>-1.131758</td>\n",
       "      <td>-0.875988</td>\n",
       "      <td>0.951639</td>\n",
       "      <td>0.118136</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.262997</td>\n",
       "      <td>-1.810757</td>\n",
       "      <td>-3.095078</td>\n",
       "      <td>1.846356</td>\n",
       "      <td>2.470918</td>\n",
       "      <td>0.481391</td>\n",
       "      <td>0.650141</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>4.893527</td>\n",
       "      <td>-2.091762</td>\n",
       "      <td>0.204152</td>\n",
       "      <td>-1.071774</td>\n",
       "      <td>-1.259489</td>\n",
       "      <td>1.902240</td>\n",
       "      <td>-0.652682</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>7.737473</td>\n",
       "      <td>-0.667950</td>\n",
       "      <td>1.172466</td>\n",
       "      <td>-1.404438</td>\n",
       "      <td>-1.373020</td>\n",
       "      <td>0.835324</td>\n",
       "      <td>0.540065</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>-1.146427</td>\n",
       "      <td>-0.215820</td>\n",
       "      <td>-0.736076</td>\n",
       "      <td>-0.361809</td>\n",
       "      <td>1.024117</td>\n",
       "      <td>0.409245</td>\n",
       "      <td>-0.995472</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>-1.038714</td>\n",
       "      <td>-0.253793</td>\n",
       "      <td>-1.496121</td>\n",
       "      <td>0.580666</td>\n",
       "      <td>-0.798031</td>\n",
       "      <td>0.914015</td>\n",
       "      <td>-0.109993</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>-1.370695</td>\n",
       "      <td>0.462749</td>\n",
       "      <td>-1.235197</td>\n",
       "      <td>-0.675207</td>\n",
       "      <td>-0.794173</td>\n",
       "      <td>-0.381632</td>\n",
       "      <td>1.063298</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>-0.848052</td>\n",
       "      <td>-2.153964</td>\n",
       "      <td>0.846246</td>\n",
       "      <td>0.734075</td>\n",
       "      <td>0.456892</td>\n",
       "      <td>-0.781866</td>\n",
       "      <td>-0.739654</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>0.815839</td>\n",
       "      <td>0.549442</td>\n",
       "      <td>0.091892</td>\n",
       "      <td>0.113625</td>\n",
       "      <td>-1.387509</td>\n",
       "      <td>0.569743</td>\n",
       "      <td>-0.526347</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>2.204567</td>\n",
       "      <td>-0.337619</td>\n",
       "      <td>0.702673</td>\n",
       "      <td>-1.009428</td>\n",
       "      <td>-0.556671</td>\n",
       "      <td>0.383773</td>\n",
       "      <td>-0.315713</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "        PC1       PC2       PC3       PC4       PC5       PC6       PC7\n",
       "0  5.529765 -1.805980 -0.613703 -1.131758 -0.875988  0.951639  0.118136\n",
       "1  0.262997 -1.810757 -3.095078  1.846356  2.470918  0.481391  0.650141\n",
       "2  4.893527 -2.091762  0.204152 -1.071774 -1.259489  1.902240 -0.652682\n",
       "3  7.737473 -0.667950  1.172466 -1.404438 -1.373020  0.835324  0.540065\n",
       "4 -1.146427 -0.215820 -0.736076 -0.361809  1.024117  0.409245 -0.995472\n",
       "5 -1.038714 -0.253793 -1.496121  0.580666 -0.798031  0.914015 -0.109993\n",
       "6 -1.370695  0.462749 -1.235197 -0.675207 -0.794173 -0.381632  1.063298\n",
       "7 -0.848052 -2.153964  0.846246  0.734075  0.456892 -0.781866 -0.739654\n",
       "8  0.815839  0.549442  0.091892  0.113625 -1.387509  0.569743 -0.526347\n",
       "9  2.204567 -0.337619  0.702673 -1.009428 -0.556671  0.383773 -0.315713"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Select the number of components\n",
    "pca7 = PCA(n_components=7)\n",
    "pca7.fit(data_norm)\n",
    "data_pca7 = pca7.transform(data_norm)\n",
    "\n",
    "# Convert the numpy array to pandas DataFrame\n",
    "data_pca7 = pd.DataFrame(data_pca7)\n",
    "data_pca7.columns = [\"PC\"+str(i) for i in range(1,8)]\n",
    "\n",
    "# Show the head of the DataFrame\n",
    "data_pca7.head(10)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Run a correlation analysis on the dimension-reducted dataset."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>PC1</th>\n",
       "      <th>PC2</th>\n",
       "      <th>PC3</th>\n",
       "      <th>PC4</th>\n",
       "      <th>PC5</th>\n",
       "      <th>PC6</th>\n",
       "      <th>PC7</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>PC1</th>\n",
       "      <td>1.000000e+00</td>\n",
       "      <td>-5.954292e-16</td>\n",
       "      <td>-4.321232e-17</td>\n",
       "      <td>4.984725e-16</td>\n",
       "      <td>5.052058e-16</td>\n",
       "      <td>-8.434210e-16</td>\n",
       "      <td>-2.463849e-16</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>PC2</th>\n",
       "      <td>-5.954292e-16</td>\n",
       "      <td>1.000000e+00</td>\n",
       "      <td>-2.060566e-17</td>\n",
       "      <td>-2.929619e-16</td>\n",
       "      <td>-2.618234e-16</td>\n",
       "      <td>5.811148e-16</td>\n",
       "      <td>4.470228e-17</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>PC3</th>\n",
       "      <td>-4.321232e-17</td>\n",
       "      <td>-2.060566e-17</td>\n",
       "      <td>1.000000e+00</td>\n",
       "      <td>-4.008848e-16</td>\n",
       "      <td>-2.095175e-16</td>\n",
       "      <td>4.764247e-16</td>\n",
       "      <td>1.868730e-16</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>PC4</th>\n",
       "      <td>4.984725e-16</td>\n",
       "      <td>-2.929619e-16</td>\n",
       "      <td>-4.008848e-16</td>\n",
       "      <td>1.000000e+00</td>\n",
       "      <td>2.781837e-15</td>\n",
       "      <td>8.145019e-17</td>\n",
       "      <td>-2.825871e-16</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>PC5</th>\n",
       "      <td>5.052058e-16</td>\n",
       "      <td>-2.618234e-16</td>\n",
       "      <td>-2.095175e-16</td>\n",
       "      <td>2.781837e-15</td>\n",
       "      <td>1.000000e+00</td>\n",
       "      <td>5.016683e-16</td>\n",
       "      <td>-1.250156e-16</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>PC6</th>\n",
       "      <td>-8.434210e-16</td>\n",
       "      <td>5.811148e-16</td>\n",
       "      <td>4.764247e-16</td>\n",
       "      <td>8.145019e-17</td>\n",
       "      <td>5.016683e-16</td>\n",
       "      <td>1.000000e+00</td>\n",
       "      <td>-2.573277e-16</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>PC7</th>\n",
       "      <td>-2.463849e-16</td>\n",
       "      <td>4.470228e-17</td>\n",
       "      <td>1.868730e-16</td>\n",
       "      <td>-2.825871e-16</td>\n",
       "      <td>-1.250156e-16</td>\n",
       "      <td>-2.573277e-16</td>\n",
       "      <td>1.000000e+00</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "              PC1           PC2           PC3           PC4           PC5  \\\n",
       "PC1  1.000000e+00 -5.954292e-16 -4.321232e-17  4.984725e-16  5.052058e-16   \n",
       "PC2 -5.954292e-16  1.000000e+00 -2.060566e-17 -2.929619e-16 -2.618234e-16   \n",
       "PC3 -4.321232e-17 -2.060566e-17  1.000000e+00 -4.008848e-16 -2.095175e-16   \n",
       "PC4  4.984725e-16 -2.929619e-16 -4.008848e-16  1.000000e+00  2.781837e-15   \n",
       "PC5  5.052058e-16 -2.618234e-16 -2.095175e-16  2.781837e-15  1.000000e+00   \n",
       "PC6 -8.434210e-16  5.811148e-16  4.764247e-16  8.145019e-17  5.016683e-16   \n",
       "PC7 -2.463849e-16  4.470228e-17  1.868730e-16 -2.825871e-16 -1.250156e-16   \n",
       "\n",
       "              PC6           PC7  \n",
       "PC1 -8.434210e-16 -2.463849e-16  \n",
       "PC2  5.811148e-16  4.470228e-17  \n",
       "PC3  4.764247e-16  1.868730e-16  \n",
       "PC4  8.145019e-17 -2.825871e-16  \n",
       "PC5  5.016683e-16 -1.250156e-16  \n",
       "PC6  1.000000e+00 -2.573277e-16  \n",
       "PC7 -2.573277e-16  1.000000e+00  "
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data_pca7.corr()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "From the above correlation table, we can find that the pairwise correlations between two components are close to zeros. This means that all these components are orthogonal (not correlated). There is no multicollinearity among principal components."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "PCA applies a linear transformation to transform the data to a new space with fewer dimensions. Let's show the loadings for the 1st principal component and explore how the 1st principal component is calculated from the normalized data."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[-0.3332577 ,  0.30350996, -0.06117068, -0.21498742,  0.42768885,\n",
       "        -0.1945408 , -0.26823424,  0.35969408, -0.15038361,  0.11360533,\n",
       "        -0.09400496, -0.27161796,  0.45456749]])"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Show the loadings for the 1st components\n",
    "pca7.components_[[0]]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "So, the first component is calculated from the normalized dataset as:\n",
    "\n",
    "$PC1 = -0.3332577*calories + 0.30350996*protein - 0.06117068*fat + 0.21498742*sodium + 0.42768885*fiber - 0.1945408*carbo - 0.26823424*sugars + 0.35969408*potass - 0.15038361*vitamins + 0.11360533 * shelf -0.09400496*weight -0.27161796*cups + 0.45456749*rating $\n",
    "\n",
    "We can also manually calculate the 1st principal component score using the following dot product. The result is the same as in the 1st column shown in result line 12. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[ 5.5297655 ],\n",
       "       [ 0.26299734],\n",
       "       [ 4.89352656],\n",
       "       [ 7.73747312],\n",
       "       [-1.146427  ],\n",
       "       [-1.03871386],\n",
       "       [-1.37069497],\n",
       "       [-0.84805178],\n",
       "       [ 0.81583925],\n",
       "       [ 2.20456653]])"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Manually calculate the 1st principal component score, show the first 10 observations.\n",
    "np.dot(data_norm, pca7.components_[[0]].reshape(13,1))[0:10]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 3.3 A 2-Component Solution"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>PC1</th>\n",
       "      <th>PC2</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>5.529765</td>\n",
       "      <td>-1.805980</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.262997</td>\n",
       "      <td>-1.810757</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>4.893527</td>\n",
       "      <td>-2.091762</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>7.737473</td>\n",
       "      <td>-0.667950</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>-1.146427</td>\n",
       "      <td>-0.215820</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "        PC1       PC2\n",
       "0  5.529765 -1.805980\n",
       "1  0.262997 -1.810757\n",
       "2  4.893527 -2.091762\n",
       "3  7.737473 -0.667950\n",
       "4 -1.146427 -0.215820"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Select the number of components\n",
    "pca2 = PCA(n_components=2)\n",
    "pca2.fit(data_norm)\n",
    "data_pca2 = pca2.fit_transform(data_norm)\n",
    "\n",
    "# Convert the numpy array to pandas DataFrame\n",
    "data_pca2 = pd.DataFrame(data_pca2)\n",
    "# data_pca2.index = df.name\n",
    "data_pca2.columns = [\"PC\"+str(i) for i in range(1,3)]\n",
    "\n",
    "# Show the head of the DataFrame\n",
    "data_pca2.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We can show the loading (or called weight) vectors to better understand the mapping from original variables to the components."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>PC1</th>\n",
       "      <th>PC2</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>calories</th>\n",
       "      <td>-0.333258</td>\n",
       "      <td>-0.354014</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>protein</th>\n",
       "      <td>0.303510</td>\n",
       "      <td>-0.184091</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>fat</th>\n",
       "      <td>-0.061171</td>\n",
       "      <td>-0.333425</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>sodium</th>\n",
       "      <td>-0.214987</td>\n",
       "      <td>-0.128996</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>fiber</th>\n",
       "      <td>0.427689</td>\n",
       "      <td>-0.236617</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>carbo</th>\n",
       "      <td>-0.194541</td>\n",
       "      <td>0.155849</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>sugars</th>\n",
       "      <td>-0.268234</td>\n",
       "      <td>-0.318593</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>potass</th>\n",
       "      <td>0.359694</td>\n",
       "      <td>-0.349417</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>vitamins</th>\n",
       "      <td>-0.150384</td>\n",
       "      <td>-0.174544</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>shelf</th>\n",
       "      <td>0.113605</td>\n",
       "      <td>-0.279502</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>weight</th>\n",
       "      <td>-0.094005</td>\n",
       "      <td>-0.441786</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>cups</th>\n",
       "      <td>-0.271618</td>\n",
       "      <td>0.250846</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>rating</th>\n",
       "      <td>0.454567</td>\n",
       "      <td>0.205951</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "               PC1       PC2\n",
       "calories -0.333258 -0.354014\n",
       "protein   0.303510 -0.184091\n",
       "fat      -0.061171 -0.333425\n",
       "sodium   -0.214987 -0.128996\n",
       "fiber     0.427689 -0.236617\n",
       "carbo    -0.194541  0.155849\n",
       "sugars   -0.268234 -0.318593\n",
       "potass    0.359694 -0.349417\n",
       "vitamins -0.150384 -0.174544\n",
       "shelf     0.113605 -0.279502\n",
       "weight   -0.094005 -0.441786\n",
       "cups     -0.271618  0.250846\n",
       "rating    0.454567  0.205951"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pd.DataFrame(pca2.components_.transpose(),\n",
    "             index=df.loc[:,'calories':'rating'].columns,\n",
    "             columns=[\"PC\"+str(i) for i in range(1,3)])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Since we have two components, we can draw a scatter plot to show the reduced dataset.\n",
    "\n",
    "Actually, one popular use of PCA is to reduce dimension to two, thus allowing us to plot a multi-dimensional data on a 2D space."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1080x1080 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig, ax = plt.subplots(figsize=(15,15))\n",
    "ax.scatter(data_pca2['PC1'], data_pca2['PC2'])\n",
    "\n",
    "ax.annotate(2,(0,0))\n",
    "\n",
    "for i in np.arange(0,77):\n",
    "    ax.annotate(df.name[i],(data_pca2.loc[i,'PC1']-0.1,data_pca2.loc[i,'PC2']+0.1))\n",
    "\n",
    "plt.xlabel('Component 1')\n",
    "plt.ylabel('Component 2')\n",
    "plt.savefig('2D_plot.png', dpi=300,bbox_inches='tight')"
   ]
  }
 ],
 "metadata": {
  "anaconda-cloud": {},
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.8"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 1
}
